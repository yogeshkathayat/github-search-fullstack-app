{"version":3,"sources":["store/searchResult.ts","config/config.ts","components/header.tsx","components/search.tsx","components/repository.tsx","components/user.tsx","components/feed.tsx","App.tsx","store/rootReducer.ts","store/store.ts","index.tsx"],"names":["slice","createSlice","name","initialState","search","type","isSearching","data","error","reducers","getSearchResults","state","action","payload","actions","searchGithub","requestBody","dispatch","a","length","axios","post","message","Header","Flex","alignItems","Box","as","FaGithub","size","ml","Heading","fontSize","Text","color","SearchBar","useState","setSearch","setType","useDispatch","debounceSearch","useRef","_","debounce","useEffect","current","pt","Stack","isInline","mb","mt","Input","value","onChange","e","target","placeholder","width","Select","id","Repo","props","borderWidth","rounded","bg","p","flex","flexDir","Link","href","html_url","description","Image","height","src","owner_avatar_url","fontWeight","owner_html_url","owner_login","Button","cursor","leftIcon","GoStar","variant","iconSpacing","_hover","textDecor","stargazers_count","GoRepoForked","forks_count","GoIssueOpened","open_issues_count","User","login","GoLocation","location","GoPerson","company","GoOrganization","followers","following","avatar_url","w","h","Feed","toast","useToast","searchResults","useSelector","searchResult","maxWidth","mx","Spinner","SimpleGrid","columns","spacing","map","result","title","status","duration","isClosable","App","minHeight","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","reducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ReactDOM","render","ThemeProvider","CSSReset","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5c6bed60.chunk.js","sourcesContent":["import { createSlice, Dispatch } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { GITHUB_SEARCH_API } from \"../config/config\";\n\nconst slice = createSlice({\n  name: \"githubSearch\",\n  initialState: {\n      search:'',\n      type:'',\n    isSearching: false,\n    data: [],\n    error: null,\n  },\n  reducers: {\n    getSearchResults: (state, action) => {\n      state.data = action.payload.data;\n      state.isSearching = action.payload.isSearching;\n      state.error = action.payload.error;\n      state.search= action.payload.search;\n      state.type= action.payload.type;\n    },\n  },\n});\n\n// method\nexport const { getSearchResults } = slice.actions;\n\n// reducer\nexport default slice.reducer;\n\nexport const searchGithub = (search: string, type: string) => {\n  const requestBody = {\n    search: search,\n    type: type,\n  };\n\n  return async (dispatch: Dispatch) => {\n    try {\n      if (search.length < 3) {\n        dispatch(getSearchResults({ data: [], isSearching: false,error:null,search,type }));\n      } else {\n        dispatch(getSearchResults({ data: [], isSearching: true ,error:null,search,type}));\n        const { data } = await axios.post(GITHUB_SEARCH_API, requestBody);\n        dispatch(getSearchResults({ data: data.data, isSearching: false,error:null,search,type }));\n      }\n    } catch (error) {\n        dispatch(getSearchResults({ data: [], isSearching: false, error:error.message ,search,type}));\n    }\n  };\n};\n","export const GITHUB_SEARCH_API='https://34.70.164.151:8443/api/search'","import React from \"react\";\nimport {Flex, Box, Heading, Text } from \"@chakra-ui/core\";\nimport { FaGithub} from \"react-icons/fa\";\n\nexport function Header() {\n  return (\n    <Flex alignItems=\"center\">\n      <Box as={FaGithub} size=\"55px\" />\n      <Box ml=\"10px\">\n        <Heading fontSize=\"24px\">GitHub Searcher</Heading>\n        <Text color=\"gray.600\">Search users or repositories below</Text>\n      </Box>\n    </Flex>\n  );\n}\n","import React, { useState, useEffect,useRef} from \"react\";\nimport {  useDispatch } from \"react-redux\";\nimport { searchGithub } from \"../store/searchResult\";\nimport _ from \"lodash\";\nimport {\n  Flex,\n  Box,\n  Stack,\n  Select,\n  Input,\n} from \"@chakra-ui/core\";\nimport { Header } from \"./header\";\nexport function SearchBar() {\n  const [search, setSearch] = useState(\"\");\n  const [type, setType] = useState(\"user\");\n  const dispatch = useDispatch();\n \n\n  const debounceSearch = useRef(\n    _.debounce(async (search: string, type: string) => {\n     dispatch(searchGithub(search, type));\n    }, 1000)\n  );\n  useEffect(() => {\n    debounceSearch.current(search, type);\n  }, [search, type]);\n\n  return (\n    <Flex alignItems=\"center\" pt=\"15px\" ml=\"400px\">\n      <Stack isInline={false} mb=\"20px\">\n        <Header />\n        <Stack isInline={true} mb=\"20px\" mt=\"20px\">\n          <Box>\n            {\" \"}\n            <Input\n              value={search}\n              onChange={(e: any) => setSearch(e.target.value)}\n              placeholder=\"Start typing to search...\"\n              width=\"300px\"\n            />{\" \"}\n          </Box>\n          <Select\n            size=\"md\"\n            value={type}\n            id=\"type\"\n            onChange={(e: any) => setType(e.target.value)}\n          >\n            <option value=\"user\">Users</option>\n            <option value=\"repository\">Repositories</option>\n          </Select>\n        </Stack>\n      </Stack>\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Stack,\n  Button,\n  Image,\n  Heading,\n  Text,\n  Flex,\n  Link,\n} from \"@chakra-ui/core\";\nimport { GoStar, GoRepoForked, GoIssueOpened } from \"react-icons/go\";\nimport { TRepository } from \"../types\";\n\nexport function Repo(props: TRepository) {\n  return (\n    <Flex borderWidth={1} rounded=\"5px\" bg=\"white\" alignItems=\"center\" p=\"15px\">\n      <Flex flex={1} flexDir=\"column\">\n        <Box mb=\"15px\">\n          <Box mb=\"10px\">\n            <Heading fontSize=\"19px\" as=\"a\" color=\"purple.700\">\n              {props.name}\n            </Heading>\n            <Box ml=\"10px\">\n              <Link fontSize=\"13px\" href={props.html_url} target=\"_blank\">\n                view repository\n              </Link>\n            </Box>\n          </Box>\n\n          <Text fontSize=\"14px\"> {props.description}</Text>\n        </Box>\n        <Flex mb=\"15px\">\n          <Image\n            width=\"30px\"\n            height=\"30px\"\n            rounded=\"5px\"\n            src={props.owner_avatar_url}\n          />\n          <Box ml=\"10px\">\n            <Text fontSize=\"14px\" color=\"gray.600\">\n              Built by &middot;\n              <Link\n                fontWeight={600}\n                href={props.owner_html_url}\n                target=\"_blank\"\n              >\n                {props.owner_login}\n              </Link>\n            </Text>\n          </Box>\n        </Flex>\n        <Stack isInline={true}>\n          <Button\n            as=\"a\"\n            cursor=\"pointer\"\n            leftIcon={GoStar}\n            variant=\"link\"\n            fontSize=\"14px\"\n            iconSpacing=\"4px\"\n            _hover={{ textDecor: \"none\" }}\n          >\n            {props.stargazers_count}\n          </Button>\n          <Button\n            as=\"a\"\n            cursor=\"pointer\"\n            leftIcon={GoRepoForked}\n            variant=\"link\"\n            fontSize=\"14px\"\n            iconSpacing=\"4px\"\n            _hover={{ textDecor: \"none\" }}\n          >\n            {\" \"}\n            {props.forks_count}\n          </Button>\n          <Button\n            as=\"a\"\n            cursor=\"pointer\"\n            leftIcon={GoIssueOpened}\n            variant=\"link\"\n            fontSize=\"14px\"\n            iconSpacing=\"4px\"\n            _hover={{ textDecor: \"none\" }}\n          >\n            {props.open_issues_count}\n          </Button>\n        </Stack>\n      </Flex>\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Stack,\n  Button,\n  Image,\n  Heading,\n  Text,\n  Flex,\n  Link,\n} from \"@chakra-ui/core\";\nimport {\n  GoPerson,\n  GoLocation,\n  GoOrganization,\n} from \"react-icons/go\";\nimport { TUser } from \"../types\";\n\nexport function User(props:TUser) {\n\n  return (\n    <Flex borderWidth={1} rounded=\"5px\" bg=\"white\" alignItems=\"center\" p=\"15px\">\n      <Flex flex={1} flexDir=\"column\">\n        <Flex mb=\"15px\">\n          <Box ml=\"10px\">\n            <Heading fontSize=\"16px\">{props.login}</Heading>\n            <Link\n              fontSize=\"13px\"\n              href={props.html_url}\n              target=\"_blank\"\n            >\n              view profile\n            </Link>\n          </Box>\n        </Flex>\n\n        <Box mb=\"15px\">\n          <Stack isInline={false}>\n            <Text fontSize=\"14px\">\n              <Button\n                as=\"a\"\n                cursor=\"pointer\"\n                leftIcon={GoLocation}\n                variant=\"link\"\n                fontSize=\"14px\"\n                iconSpacing=\"4px\"\n                _hover={{ textDecor: \"none\" }}\n              >\n               {props.location}\n              </Button>\n            </Text>\n\n            <Text fontSize=\"14px\">\n           \n              <Button\n                as=\"a\"\n                cursor=\"pointer\"\n                leftIcon={GoPerson}\n                variant=\"link\"\n                fontSize=\"14px\"\n                iconSpacing=\"4px\"\n                _hover={{ textDecor: \"none\" }}\n              >\n              {props.company}\n              </Button>\n            </Text>\n                        <Text fontSize=\"14px\" color=\"gray.600\">\n              <Button\n                as=\"a\"\n                cursor=\"pointer\"\n                leftIcon={GoOrganization}\n                variant=\"link\"\n                fontSize=\"14px\"\n                iconSpacing=\"2px\"\n                _hover={{ textDecor: \"none\" }}\n              >{props.followers} followers &middot;{props.following} following </Button>\n              \n            </Text>\n          </Stack>\n        </Box>\n      </Flex>\n      <Image\n        src={props.avatar_url}\n        w={\"105px\"}\n        h={\"105px\"}\n        rounded=\"100%\"\n      />\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Box, SimpleGrid, Spinner,useToast } from \"@chakra-ui/core\";\nimport { SearchBar } from \"./search\";\nimport { Repo } from \"./repository\";\nimport { User } from \"./user\";\nimport { TUser, TRepository, TState } from \"../types\";\n\nexport function Feed() {\n  const toast = useToast();\n\n  const searchResults = useSelector((state: TState) => state.searchResult.data);\n  const isSearching = useSelector(\n    (state: TState) => state.searchResult.isSearching\n  );\n  const error = useSelector(\n    (state: TState) => state.searchResult.error\n  );\n    const type = useSelector(\n    (state: TState) => state.searchResult.type\n  );\n\n  return (\n    <Box maxWidth=\"1200px\" mx=\"auto\" alignItems=\"center\">\n      <SearchBar />\n\n      {isSearching && (\n        <Box alignItems=\"center\" ml=\"600px\">\n          {\" \"}\n          <Spinner size=\"lg\" />\n        </Box>\n      )}\n      <SimpleGrid columns={3} spacing=\"15px\" >\n        {type === \"repository\"\n          ? searchResults.map((result: TRepository) => <Repo {...result} />)\n          : searchResults.map((result: TUser) => <User {...result} />)}\n      </SimpleGrid>\n\n      {error &&  toast({\n          title: \"An error occurred.\",\n          description: error,\n          status: \"error\",\n          duration: 9000,\n          isClosable: true,\n        })}\n    </Box>\n  );\n}\n","import React from 'react';\nimport {Box } from '@chakra-ui/core';\nimport {Feed} from './components/feed';\n\nfunction App(){ \n\n  return (\n      <Box width='100vw' minHeight={'100vh'} bg=\"gray.100\">\n             <Feed />\n      </Box>\n      );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport searchResult from \"./searchResult\";\n\n\nexport default combineReducers({\n    searchResult\n});","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport reducer from \"./rootReducer\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: [\n    ...getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n  ],\n});\nlet persistor = persistStore(store);\nexport { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { CSSReset, ThemeProvider } from \"@chakra-ui/core\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store,persistor } from \"./store/store\";\nReactDOM.render(\n  <ThemeProvider>\n    <CSSReset />\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}